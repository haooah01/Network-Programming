MÔ TẢ DỰ ÁN CALCULATOR C SHARP

GIỚI THIỆU TỔNG QUAN
Dự án này là một ứng dụng máy tính console được viết bằng ngôn ngữ lập trình C Sharp với framework .NET 8.0. Ứng dụng được xây dựng theo phương pháp tiếp cận Negative Prompt và Positive Prompt để đảm bảo tính ổn định và xử lý lỗi toàn vẹn.

MỤC TIÊU DỰ ÁN
Xây dựng một ứng dụng máy tính console có khả năng xử lý bốn phép toán cơ bản cộng, trừ, nhân, chia với các tính năng sau:
- Kiểm tra dữ liệu đầu vào nghiêm ngặt
- Xử lý lỗi toàn vẹn và bảo mật
- Giao diện người dùng thân thiện
- Hỗ trợ nhiều định dạng nhập liệu khác nhau
- Báo cáo lỗi chi tiết và hướng dẫn sử dụng

CẤU TRÚC DỰ ÁN
Dự án bao gồm các file và thư mục chính sau:

1. Program.cs - File chính chứa logic ứng dụng
   Chứa class SimpleEnhancedCalculator với các phương thức:
   - DoOperation: Thực hiện các phép toán
   - TryParseNumber: Kiểm tra và chuyển đổi số
   - GetNumber: Lấy số từ người dùng
   - GetOperator: Lấy phép toán từ người dùng
   
   Chứa class Program với phương thức Main thực thi ứng dụng

2. Calculator.csproj - File cấu hình dự án .NET
   Định nghĩa target framework là net8.0
   Kích hoạt chế độ Nullable reference types
   Loại trừ thư mục TutorialSteps khỏi quá trình build

3. TutorialSteps - Thư mục chứa các bước học tập
   Bao gồm các phiên bản đơn giản đến phức tạp

4. ERROR_ANALYSIS.md - Tài liệu phân tích lỗi
   Chứa kết quả phân tích Negative và Positive Prompt

5. NEGATIVE_POSITIVE_ANALYSIS_SUMMARY.md - Báo cáo tổng kết
   Chứa kết quả cuối cùng của quá trình phân tích

TÍNH NĂNG CHÍNH CỦA ỨNG DỤNG

Phép toán được hỗ trợ:
- Cộng: Sử dụng ký hiệu a, add hoặc dấu cộng
- Trừ: Sử dụng ký hiệu s, subtract hoặc dấu trừ  
- Nhân: Sử dụng ký hiệu m, multiply hoặc dấu nhân
- Chia: Sử dụng ký hiệu d, divide hoặc dấu chia

Kiểm tra dữ liệu đầu vào:
- Loại bỏ các ký tự không hợp lệ
- Kiểm tra định dạng số hợp lệ
- Hỗ trợ ký pháp khoa học như 1e10
- Ngăn chặn giá trị vô cực và NaN
- Kiểm tra phạm vi số hợp lý

Xử lý lỗi:
- Chia cho số không
- Tràn số overflow
- Định dạng số không hợp lệ
- Phép toán không tồn tại
- Dữ liệu rỗng hoặc null

Giao diện người dùng:
- Thông báo lỗi rõ ràng
- Hướng dẫn sử dụng chi tiết
- Đếm số lần tính toán
- Cho phép tiếp tục hoặc thoát

CÔNG NGHỆ SỬ DỤNG

Ngôn ngữ lập trình: C Sharp
Framework: Microsoft .NET 8.0
Thư viện sử dụng:
- System: Các chức năng cơ bản
- System.Globalization: Xử lý định dạng số quốc tế
- System.Text.RegularExpressions: Kiểm tra mẫu ký tự

Kiểu dữ liệu chính:
- double: Lưu trữ số thực
- string: Xử lý chuỗi ký tự
- bool: Kiểm tra điều kiện

PHƯƠNG PHÁP PHÁT TRIỂN

Ứng dụng được phát triển theo phương pháp Negative và Positive Prompting:

Negative Prompting - Tìm ra các vấn đề tiềm ẩn:
- Dữ liệu đầu vào không hợp lệ
- Các trường hợp ngoại lệ
- Lỗi toán học có thể xảy ra
- Vấn đề bảo mật dữ liệu
- Hiện tượng tràn bộ nhớ
- Các ký tự đặc biệt và Unicode

Positive Prompting - Xây dựng giải pháp:
- Kiểm tra dữ liệu bằng Regular Expression
- Xử lý lỗi bằng try catch
- Thông báo lỗi chi tiết
- Hướng dẫn người dùng
- Giao diện thân thiện
- Test tự động

CÁCH SỬ DỤNG ỨNG DỤNG

Bước 1: Khởi động ứng dụng
Chạy lệnh dotnet run trong thư mục dự án

Bước 2: Nhập số thứ nhất
Ứng dụng sẽ yêu cầu nhập số đầu tiên
Có thể nhập số nguyên, số thập phân hoặc ký pháp khoa học

Bước 3: Nhập số thứ hai
Tương tự như bước 2 cho số thứ hai

Bước 4: Chọn phép toán
Chọn một trong các phép toán: a, add, +, s, subtract, -, m, multiply, *, d, divide, /

Bước 5: Xem kết quả
Ứng dụng hiển thị kết quả tính toán hoặc thông báo lỗi nếu có

Bước 6: Tiếp tục hoặc thoát
Nhập n để thoát hoặc bất kỳ phím nào để tiếp tục

VÍ DỤ SỬ DỤNG

Ví dụ 1 - Phép cộng bình thường:
Nhập số thứ nhất: 42.5
Nhập số thứ hai: 17.3
Chọn phép toán: add
Kết quả: 42.5 + 17.3 = 59.8

Ví dụ 2 - Xử lý lỗi nhập liệu:
Nhập số thứ nhất: abc
Lỗi: abc chứa ký tự không hợp lệ
Thử lại: 25
Nhập số thứ hai: 0
Chọn phép toán: divide
Lỗi: Không thể chia cho số không

Ví dụ 3 - Số khoa học:
Nhập số thứ nhất: 1.5e3
Nhập số thứ hai: 2e2
Chọn phép toán: multiply
Kết quả: 1500 × 200 = 300000

XỬ LÝ LỖI VÀ BẢO MẬT

Các loại lỗi được xử lý:
- Dữ liệu null hoặc rỗng
- Ký tự không hợp lệ
- Định dạng số sai
- Phép chia cho không
- Tràn số quá lớn
- Giá trị vô cực
- NaN không phải là số

Biện pháp bảo mật:
- Kiểm tra dữ liệu đầu vào nghiêm ngặt
- Ngăn chặn SQL injection thông qua kiểm tra ký tự
- Xử lý ngoại lệ an toàn
- Giới hạn phạm vi số
- Ngăn chặn tràn bộ nhớ

KIỂM THỬ VÀ CHẤT LƯỢNG

Các phương pháp kiểm thử:
- Kiểm thử đơn vị cho từng phương thức
- Kiểm thử tích hợp toàn hệ thống
- Kiểm thử với dữ liệu biên giới
- Kiểm thử xử lý lỗi
- Kiểm thử hiệu suất

Tiêu chí chất lượng:
- Mã nguồn rõ ràng dễ hiểu
- Xử lý lỗi toàn diện
- Giao diện người dùng thân thiện
- Tài liệu đầy đủ
- Có thể mở rộng dễ dàng

HƯỚNG PHÁT TRIỂN

Các tính năng có thể thêm vào:
- Phép toán nâng cao như mũ, căn bậc hai
- Lịch sử các phép tính
- Giao diện đồ họa GUI
- Lưu kết quả ra file
- Hỗ trợ nhiều ngôn ngữ
- Tính toán biểu thức phức tạp

Cải tiến kỹ thuật:
- Sử dụng dependency injection
- Thêm logging chi tiết
- Tối ưu hiệu suất
- Hỗ trợ async programming
- Tích hợp cơ sở dữ liệu

KẾT LUẬN

Dự án Calculator C Sharp là một ví dụ điển hình về cách xây dựng ứng dụng console an toàn và ổn định. Việc áp dụng phương pháp Negative và Positive Prompting đã giúp tạo ra một ứng dụng có khả năng xử lý lỗi toàn vẹn và mang lại trải nghiệm người dùng chuyên nghiệp.

Ứng dụng không chỉ là một máy tính đơn giản mà còn là nền tảng để học tập các khái niệm quan trọng trong lập trình như xử lý lỗi, kiểm tra dữ liệu, và thiết kế giao diện người dùng.